<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mokoko.contacts.ContactMapper">

    <sql id="ContactColumns">
        id
        , group_id, user_id, fullname, firstname, lastname, nickname, birth, organization, position, sort_no, notes
    </sql>
    <sql id="ContactExpansionColumns">
        id
        , contact_id, phone, phone_type, messenger, address, address_type, special_day, special_day_type, email,
        sort_no, created
    </sql>

    <resultMap type="Contact" id="ContactResultMap">
        <result property="id" column="id"/>
        <result property="userID" column="user_id"/>
        <result property="fullName" column="fullname"/>
        <result property="firstname" column="firstname"/>
        <result property="lastname" column="lastname"/>
        <result property="nickname" column="nickname"/>
        <result property="birth" column="birth"/>
        <result property="organization" column="organization"/>
        <result property="position" column="position"/>
        <result property="sortNumber" column="sort_no"/>
        <result property="notes" column="notes"/>
        <result property="important" column="important"/>
        <collection property="contactExpansions" ofType="ContactExpansion">
            <result property="id" column="contact_expansion_id"/>
            <result property="contactID" column="contact_id"/>
            <result property="phone" column="phone"/>
            <result property="phoneType" column="phone_type"/>
            <result property="messenger" column="messenger"/>
            <result property="address" column="address"/>
            <result property="addressType" column="address_type"/>
            <result property="specialDay" column="special_day"/>
            <result property="specialDayType" column="special_day_type"/>
            <result property="email" column="email"/>
            <result property="sortNumber" column="contact_expansion_sort_no"/>
            <result property="created" column="created"/>
        </collection>
        <collection property="groupIDList" ofType="Integer"/>
    </resultMap>

    <select id="selectContacts" resultMap="ContactResultMap">
        SELECT c.id,
               user_id,
               fullname,
               firstname,
               lastname,
               nickname,
               birth,
               organization,
               position,
               c.sort_no,
               notes,
               ce.id      contact_expansion_id,
               contact_id,
               phone,
               phone_type,
               messenger,
               address,
               address_type,
               special_day,
               special_day_type,
               email,
               ce.sort_no contact_expansion_sort_no,
               created,
               important
        FROM contact c
                 INNER JOIN contact_expansion ce
                            ON c.id = ce.contact_id
        ORDER BY ce.sort_no
    </select>

    <select id="selectAllCount" resultType="int">
        SELECT COUNT(*)
        FROM contact
        WHERE user_id = #{userID}
    </select>

    <select id="selectImportantCount" resultType="int">
        SELECT COUNT(*)
        FROM contact
        WHERE user_id = #{userID}
          AND important = 1
    </select>

    <select id="selectRecentCount" resultType="int">
        SELECT COUNT(*)
        FROM contact_recent cr
                 INNER JOIN contact c
                            ON cr.contact_id = c.id
        WHERE cr.user_id = #{userID}
    </select>

    <delete id="deleteGroupID">
        DELETE FROM contact_contact_group
        WHERE group_id = #{groupID}
    </delete>

</mapper>